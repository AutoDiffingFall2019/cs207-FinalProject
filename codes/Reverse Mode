#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Nov 14 13:46:22 2019

@author: sijie
"""
import math 
import numpy as np
class Var:
    def __init__(self, value):
        self.value = value
        self.children = []
        self.grad_value = None

    def grad(self):
        if self.grad_value is None:
            self.grad_value = sum(weight * var.grad()
                                  for weight, var in self.children)
        return self.grad_value

    #overloading the '+' operator
    def __add__(self, other):
        z = Var(self.value + other.value)
        self.children.append((1.0, z))
        other.children.append((1.0, z))
        return z
    
    #overloading the '-' operator
    def __mul__(self, other):
        z = Var(self.value * other.value)
        self.children.append((other.value, z))
        other.children.append((self.value, z))
        return z

def sin(x):
    z = Var(math.sin(x.value))
    x.children.append((math.cos(x.value), z))
    return z

x = Var(0.5)
y = Var(4.2)
z = x * y + sin(x)
z.grad_value = 1.0
print('value of x*y + sin(x) evaluated at x=0.5, y=4.2: {}\nforward pass of our implementation: {}'.format(0.5 * 4.2 + np.sin(0.5), z.value))
print('value of dz/dx = y + cos(x) evaluated at x=0.5, y=4.2: {}\nreverse pass of our implementation: {}'.format(4.2 + np.cos(0.5), x.grad()))